{"ast":null,"code":"import _slicedToArray from\"C:/Users/\\u05E2\\u05E0\\u05D1\\u05E8/Desktop/react/01-starting-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import Login from\"./components/Login/Login\";import Home from\"./components/Home/Home\";import MainHeader from\"./components/MainHeader/MainHeader\";import AuthContext from\"./store/auth-context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];var storedUserLoggedInInformation=localStorage.getItem(isLoggedIn);useEffect(function(){if(storedUserLoggedInInformation===1){setIsLoggedIn(true);}},[]);var loginHandler=function loginHandler(email,password){// We should of course check email and password\n// But it's just a dummy/ demo anyways\nsetIsLoggedIn(true);localStorage.setItem(\"isLoggedIn\",1);};var logoutHandler=function logoutHandler(){localStorage.removeItem(\"isLoggedIn\");setIsLoggedIn(false);};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(AuthContext.Provider,{children:[/*#__PURE__*/_jsx(MainHeader,{isAuthenticated:isLoggedIn,onLogout:logoutHandler}),/*#__PURE__*/_jsxs(\"main\",{children:[!isLoggedIn&&/*#__PURE__*/_jsx(Login,{onLogin:loginHandler}),isLoggedIn&&/*#__PURE__*/_jsx(Home,{onLogout:logoutHandler})]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"sources":["C:/Users/ענבר/Desktop/react/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const storedUserLoggedInInformation = localStorage.getItem(isLoggedIn);\n  useEffect(() => {\n    if (storedUserLoggedInInformation === 1) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", 1);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <AuthContext.Provider>\n        <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n        <main>\n          {!isLoggedIn && <Login onLogin={loginHandler} />}\n          {isLoggedIn && <Home onLogout={logoutHandler} />}\n        </main>\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"yJAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD,MAAOC,MAAK,KAAM,0BAA0B,CAC5C,MAAOC,KAAI,KAAM,wBAAwB,CACzC,MAAOC,WAAU,KAAM,oCAAoC,CAC3D,MAAOC,YAAW,KAAM,sBAAsB,CAAC,wFAE/C,QAASC,IAAG,EAAG,CACb,cAAoCN,QAAQ,CAAC,KAAK,CAAC,wCAA5CO,UAAU,eAAEC,aAAa,eAChC,GAAMC,8BAA6B,CAAGC,YAAY,CAACC,OAAO,CAACJ,UAAU,CAAC,CACtEN,SAAS,CAAC,UAAM,CACd,GAAIQ,6BAA6B,GAAK,CAAC,CAAE,CACvCD,aAAa,CAAC,IAAI,CAAC,CACrB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAMI,aAAY,CAAG,QAAfA,aAAY,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CACxC;AACA;AACAN,aAAa,CAAC,IAAI,CAAC,CACnBE,YAAY,CAACK,OAAO,CAAC,YAAY,CAAE,CAAC,CAAC,CACvC,CAAC,CAED,GAAMC,cAAa,CAAG,QAAhBA,cAAa,EAAS,CAC1BN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC,CACrCT,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAED,mBACE,KAAC,KAAK,CAAC,QAAQ,wBACb,MAAC,WAAW,CAAC,QAAQ,yBACnB,KAAC,UAAU,EAAC,eAAe,CAAED,UAAW,CAAC,QAAQ,CAAES,aAAc,EAAG,cACpE,wBACG,CAACT,UAAU,eAAI,KAAC,KAAK,EAAC,OAAO,CAAEK,YAAa,EAAG,CAC/CL,UAAU,eAAI,KAAC,IAAI,EAAC,QAAQ,CAAES,aAAc,EAAG,GAC3C,GACc,EACR,CAErB,CAEA,cAAeV,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}